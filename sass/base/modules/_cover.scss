// Cover
.cover {
	background-repeat: no-repeat;	
	
	&.cover-background-image {

	}

	@include breakpoint( $tablet ) {
		min-height: 500px;  // TODO remove magic number
		display: flex;
		align-items: center;
	}

	.content-wrapper {
		@include clearfix;
	}

	&__section {
		position: relative; // Allow overlay positioning
		background-size: 0 0; // Hide background image
		@include breakpoint( $tablet ) {
			background-size: cover; // Show background image
		}
		// Overlay
		&:before {
			@extend %overlay;
			@extend %overlay__dark;
			content: none; // Hide the overlay
			@include breakpoint( $tablet ) {
				content: ""; // Show the overlay
			}
		}
	}

	&__container {
		@include breakpoint( $tablet ){
			padding: 2rem;
			background-color: transparent; // Remove color to show bg image
		}
	}

	&__inline-image {
		// Replaces the background image on mobile
		display: block;
		@include breakpoint( $tablet ) {
			display: none;
		}
	}

	.media-object {		
		.media-object-content {
			display: table;
			height: auto;
			&>div {
				display: table-cell;
				vertical-align: middle;
			}

			footer {
				position: relative;
				background: none;
				padding: 1rem;
				&.read-more {
					a {
						margin-right: 0;
						margin-left: 0;
						background: yellow;
						border: none;
					}
				}
			}
		}
	}

	body.cover-no-background-image & {
		@extend .section-minor; /* 1 */
		h1 {
			margin: 1em 0; /* 1 */
		}
	}

	// Content color
	// Class added based on custom field
	&__dark-image {
		@include light-text-dark-bg; // Set container color
		// @include can't be used in a media query
		// So if we want to change the color responsively,
		// we need to be specific.
		.cover__container { // 
			color: $black; // Content has no background image
			// Link colors would also have to be specified here. 
			@include breakpoint( $tablet ) {
				color: inherit; // Falls back to container color
			}
		}
	}
	&__light-image {
		@include dark-text-light-bg;
	}


	// Content alignment
	// Class added based on custom field
	&__content-top {
		align-items: flex-start;
	}
	&__content-bottom {
		align-items: flex-end;
	}

}

#cover-text-substitute {
	@include breakpoint( $tablet ) {
		/* Hide duplicate cover content on desktop */
		display: none;
	}
}

.home .cover {
	// margin-top: -10px; // By adjusting this, you can break the grid!
	.media-object {
		border: none;
		margin-bottom: 0;
		.media-object-content {
			p {
				padding: 0;
			}
		}
		.media-object-media {
			background-size: 0; // Hides the background image
			position: relative;
			
			// On tablets, we use a background image for best results
			@include breakpoint( $tablet ) {
				background-size: contain; // Displays the background image
			}
			// On tablets in landscape, we switch back to a inline image
			@include breakpoint( $tablet-horizontal ) {
				background-size: 0; // Hides the background image
			}

			img {
				width: 100%;
				margin-bottom: 1.5em; // Stacked layout, so needs a margin
				@include breakpoint( $tablet ) {
					display: none; // Hides the inline image
					margin-bottom: 0; // Remove margin as layout is now side by side
				}
				@include breakpoint( $tablet-horizontal ) {
					display: inline; // Shows the inline image
				}
			}


		}
		.button {
			margin-bottom: 10px;
		}
		article { margin: 0; }
	}
}

// ======= Footnotes ======= //

/* 1	Reset padding
		Not required when there is no background image */